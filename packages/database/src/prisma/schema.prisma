generator client {
  provider = "prisma-client-js"
  output   = "../../dist"
  previewFeatures = ["fieldReference"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Position {
  ATK
  DEF
  MEI
  GK
}

model player {
  id            String          @id @default(uuid())
  name          String          @db.VarChar(365)
  team          String?         @db.VarChar(3)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  position      Position
  player_stats  player_stats[]
  match_players match_players[]
  weekly_team   weekly_team[]
}

model player_stats {
  id                           String @id @default(uuid())
  player_id                    String
  goals                        Int
  assists                      Int
  participations               Int
  own_goal                     Int
  tackles                      Int
  games_without_suffered_goals Int
  created_plays                Int
  goals_suffered               Int
  defenses                     Int
  player                       player @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "fk_player_stats_player")
}

model match {
  id            String          @id @default(uuid())
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  match_players match_players[]
  weekly_team   weekly_team[]
}

model match_players {
  id                           String   @id @default(uuid())
  match_id                     String
  player_id                    String
  goals                        Int
  assists                      Int
  participations               Int
  own_goal                     Int
  tackles                      Int
  games_without_suffered_goals Int
  created_plays                Int
  goals_suffered               Int
  defenses                     Int
  created_at                   DateTime @default(now()) @db.Timestamp(6)
  match                        match    @relation(fields: [match_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_match_player_match")
  player                       player   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_match_player_player")
}

enum Team {
  Team1
  Team2
  Team3
  Team4
}

model weekly_team {
  id           String         @id @default(uuid())
  match_id     String
  player_id    String
  team         Team
  player       player         @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_player")
  match        match          @relation(fields: [match_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_match")
  team_results team_results[]
}

model team_results {
  id            String      @id @default(uuid())
  team_id       String
  goalsMade     Int
  goalsSuffered Int
  weekly_team   weekly_team @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_team_results")
}
